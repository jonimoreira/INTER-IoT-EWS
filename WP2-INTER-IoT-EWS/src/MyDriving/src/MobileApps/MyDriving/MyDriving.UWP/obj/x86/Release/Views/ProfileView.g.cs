#pragma checksum "D:\Projects\InterIOT\Workplan\WP2-INTER-IoT-EWS\src\MyDriving\src\MobileApps\MyDriving\MyDriving.UWP\Views\ProfileView.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "0B96388EB3513917CA3378D7840B49F1"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyDriving.UWP.Views
{
    partial class ProfileView : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_FrameworkElement_DataContext(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.DataContext = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(global::Windows.UI.Xaml.Media.ImageBrush obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.ImageSource = value;
            }
        };

        private class ProfileView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IProfileView_Bindings
        {
            private global::MyDriving.UWP.Views.ProfileView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::MyDriving.UWP.Controls.ProfileViewTabControl obj2;
            private global::MyDriving.UWP.Controls.ProfileViewTabControl obj3;
            private global::MyDriving.UWP.Controls.ProfileViewTabControl obj4;
            private global::MyDriving.UWP.Controls.ProfileViewTabControl obj5;
            private global::MyDriving.UWP.Controls.ProfileViewTabControl obj6;
            private global::MyDriving.UWP.Controls.ProfileViewTabControl obj7;
            private global::MyDriving.UWP.Controls.ProfileViewTabControl obj8;
            private global::MyDriving.UWP.Controls.CirclePercentage obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Media.ImageBrush obj12;

            private ProfileView_obj1_BindingsTracking bindingsTracking;

            public ProfileView_obj1_Bindings()
            {
                this.bindingsTracking = new ProfileView_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2:
                        this.obj2 = (global::MyDriving.UWP.Controls.ProfileViewTabControl)target;
                        break;
                    case 3:
                        this.obj3 = (global::MyDriving.UWP.Controls.ProfileViewTabControl)target;
                        break;
                    case 4:
                        this.obj4 = (global::MyDriving.UWP.Controls.ProfileViewTabControl)target;
                        break;
                    case 5:
                        this.obj5 = (global::MyDriving.UWP.Controls.ProfileViewTabControl)target;
                        break;
                    case 6:
                        this.obj6 = (global::MyDriving.UWP.Controls.ProfileViewTabControl)target;
                        break;
                    case 7:
                        this.obj7 = (global::MyDriving.UWP.Controls.ProfileViewTabControl)target;
                        break;
                    case 8:
                        this.obj8 = (global::MyDriving.UWP.Controls.ProfileViewTabControl)target;
                        break;
                    case 9:
                        this.obj9 = (global::MyDriving.UWP.Controls.CirclePercentage)target;
                        break;
                    case 10:
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 11:
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12:
                        this.obj12 = (global::Windows.UI.Xaml.Media.ImageBrush)target;
                        break;
                    default:
                        break;
                }
            }

            // IProfileView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // ProfileView_obj1_Bindings

            public void SetDataRoot(global::MyDriving.UWP.Views.ProfileView newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MyDriving.UWP.Views.ProfileView obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_profileViewModel(obj.profileViewModel, phase);
                    }
                }
            }
            private void Update_profileViewModel(global::MyDriving.ViewModel.ProfileViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_profileViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_profileViewModel_TotalDistanceDisplay(obj.TotalDistanceDisplay, phase);
                        this.Update_profileViewModel_TotalTimeDisplay(obj.TotalTimeDisplay, phase);
                        this.Update_profileViewModel_MaxSpeedDisplay(obj.MaxSpeedDisplay, phase);
                        this.Update_profileViewModel_FuelDisplay(obj.FuelDisplay, phase);
                        this.Update_profileViewModel_HardStops(obj.HardStops, phase);
                        this.Update_profileViewModel_HardAccelerations(obj.HardAccelerations, phase);
                        this.Update_profileViewModel_TotalTrips(obj.TotalTrips, phase);
                        this.Update_profileViewModel_DrivingSkills(obj.DrivingSkills, phase);
                        this.Update_profileViewModel_DrivingSkillsPlacementBucket(obj.DrivingSkillsPlacementBucket, phase);
                        this.Update_profileViewModel_Settings(obj.Settings, phase);
                    }
                }
            }
            private void Update_profileViewModel_TotalDistanceDisplay(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj2, obj, null);
                }
            }
            private void Update_profileViewModel_TotalTimeDisplay(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj3, obj, null);
                }
            }
            private void Update_profileViewModel_MaxSpeedDisplay(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj4, obj, null);
                }
            }
            private void Update_profileViewModel_FuelDisplay(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj5, obj, null);
                }
            }
            private void Update_profileViewModel_HardStops(global::System.Int64 obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj6, (global::System.Object)this.LookupConverter("StringFormatConverter").Convert(obj, typeof(global::System.Object), " {0}  times", null), null);
                }
            }
            private void Update_profileViewModel_HardAccelerations(global::System.Int64 obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj7, (global::System.Object)this.LookupConverter("StringFormatConverter").Convert(obj, typeof(global::System.Object), " {0}  times", null), null);
                }
            }
            private void Update_profileViewModel_TotalTrips(global::System.Int64 obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj8, obj, null);
                }
            }
            private void Update_profileViewModel_DrivingSkills(global::System.Int32 obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj9, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj10, (global::System.String)this.LookupConverter("StringFormatConverter").Convert(obj, typeof(global::System.String), " {0}% ", null), null);
                }
            }
            private void Update_profileViewModel_DrivingSkillsPlacementBucket(global::MyDriving.ViewModel.DrivingSkillsBucket obj, int phase)
            {
            if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
            {
                this.Update_profileViewModel_DrivingSkillsPlacementBucket_Description(obj.Description, phase);
            }
            }
            private void Update_profileViewModel_DrivingSkillsPlacementBucket_Description(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, (global::System.String)this.LookupConverter("StringFormatConverter").Convert(obj, typeof(global::System.String), "Driving skills: {0}", null), null);
                }
            }
            private void Update_profileViewModel_Settings(global::MyDriving.Utils.Settings obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_profileViewModel_Settings(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_profileViewModel_Settings_UserProfileUrl(obj.UserProfileUrl, phase);
                    }
                }
            }
            private void Update_profileViewModel_Settings_UserProfileUrl(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(this.obj12, (global::Windows.UI.Xaml.Media.ImageSource)this.LookupConverter("ImageSourceConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.ImageSource), null, null), null);
                }
            }

            private class ProfileView_obj1_BindingsTracking
            {
                global::System.WeakReference<ProfileView_obj1_Bindings> WeakRefToBindingObj; 

                public ProfileView_obj1_BindingsTracking(ProfileView_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<ProfileView_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_profileViewModel(null);
                    UpdateChildListeners_profileViewModel_Settings(null);
                }

                public void PropertyChanged_profileViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ProfileView_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MyDriving.ViewModel.ProfileViewModel obj = sender as global::MyDriving.ViewModel.ProfileViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_profileViewModel_TotalDistanceDisplay(obj.TotalDistanceDisplay, DATA_CHANGED);
                                    bindings.Update_profileViewModel_TotalTimeDisplay(obj.TotalTimeDisplay, DATA_CHANGED);
                                    bindings.Update_profileViewModel_MaxSpeedDisplay(obj.MaxSpeedDisplay, DATA_CHANGED);
                                    bindings.Update_profileViewModel_FuelDisplay(obj.FuelDisplay, DATA_CHANGED);
                                    bindings.Update_profileViewModel_HardStops(obj.HardStops, DATA_CHANGED);
                                    bindings.Update_profileViewModel_HardAccelerations(obj.HardAccelerations, DATA_CHANGED);
                                    bindings.Update_profileViewModel_TotalTrips(obj.TotalTrips, DATA_CHANGED);
                                    bindings.Update_profileViewModel_DrivingSkills(obj.DrivingSkills, DATA_CHANGED);
                                    bindings.Update_profileViewModel_DrivingSkillsPlacementBucket(obj.DrivingSkillsPlacementBucket, DATA_CHANGED);
                                    bindings.Update_profileViewModel_Settings(obj.Settings, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "TotalDistanceDisplay":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_profileViewModel_TotalDistanceDisplay(obj.TotalDistanceDisplay, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TotalTimeDisplay":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_profileViewModel_TotalTimeDisplay(obj.TotalTimeDisplay, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MaxSpeedDisplay":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_profileViewModel_MaxSpeedDisplay(obj.MaxSpeedDisplay, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FuelDisplay":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_profileViewModel_FuelDisplay(obj.FuelDisplay, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HardStops":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_profileViewModel_HardStops(obj.HardStops, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HardAccelerations":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_profileViewModel_HardAccelerations(obj.HardAccelerations, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TotalTrips":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_profileViewModel_TotalTrips(obj.TotalTrips, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DrivingSkills":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_profileViewModel_DrivingSkills(obj.DrivingSkills, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DrivingSkillsPlacementBucket":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_profileViewModel_DrivingSkillsPlacementBucket(obj.DrivingSkillsPlacementBucket, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Settings":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_profileViewModel_Settings(obj.Settings, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::MyDriving.ViewModel.ProfileViewModel cache_profileViewModel = null;
                public void UpdateChildListeners_profileViewModel(global::MyDriving.ViewModel.ProfileViewModel obj)
                {
                    if (obj != cache_profileViewModel)
                    {
                        if (cache_profileViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_profileViewModel).PropertyChanged -= PropertyChanged_profileViewModel;
                            cache_profileViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_profileViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_profileViewModel;
                        }
                    }
                }
                public void PropertyChanged_profileViewModel_Settings(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ProfileView_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MyDriving.Utils.Settings obj = sender as global::MyDriving.Utils.Settings;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_profileViewModel_Settings_UserProfileUrl(obj.UserProfileUrl, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "UserProfileUrl":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_profileViewModel_Settings_UserProfileUrl(obj.UserProfileUrl, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::MyDriving.Utils.Settings cache_profileViewModel_Settings = null;
                public void UpdateChildListeners_profileViewModel_Settings(global::MyDriving.Utils.Settings obj)
                {
                    if (obj != cache_profileViewModel_Settings)
                    {
                        if (cache_profileViewModel_Settings != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_profileViewModel_Settings).PropertyChanged -= PropertyChanged_profileViewModel_Settings;
                            cache_profileViewModel_Settings = null;
                        }
                        if (obj != null)
                        {
                            cache_profileViewModel_Settings = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_profileViewModel_Settings;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    this.TotalDistanceTab = (global::MyDriving.UWP.Controls.ProfileViewTabControl)(target);
                }
                break;
            case 3:
                {
                    this.TotalTimeTab = (global::MyDriving.UWP.Controls.ProfileViewTabControl)(target);
                }
                break;
            case 4:
                {
                    this.MaxSpeedTab = (global::MyDriving.UWP.Controls.ProfileViewTabControl)(target);
                }
                break;
            case 5:
                {
                    this.FuelConsumptionTab = (global::MyDriving.UWP.Controls.ProfileViewTabControl)(target);
                }
                break;
            case 6:
                {
                    this.HardBreaksTab = (global::MyDriving.UWP.Controls.ProfileViewTabControl)(target);
                }
                break;
            case 7:
                {
                    this.HardAccelTab = (global::MyDriving.UWP.Controls.ProfileViewTabControl)(target);
                }
                break;
            case 8:
                {
                    this.TotalTripsTab = (global::MyDriving.UWP.Controls.ProfileViewTabControl)(target);
                }
                break;
            case 9:
                {
                    this.CirclePercentage = (global::MyDriving.UWP.Controls.CirclePercentage)(target);
                }
                break;
            case 10:
                {
                    this.DrivingSkills = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 11:
                {
                    this.DrivingSkillsMessage2 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 12:
                {
                    this.ProfileImage = (global::Windows.UI.Xaml.Media.ImageBrush)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    ProfileView_obj1_Bindings bindings = new ProfileView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

