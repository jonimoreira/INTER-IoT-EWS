#pragma checksum "D:\Projects\InterIOT\Workplan\WP2-INTER-IoT-EWS\src\MyDriving\src\MobileApps\MyDriving\MyDriving.UWP\Controls\CirclePercentage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "0B5779892E40755A34A2DD15EDD29811"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyDriving.UWP.Controls
{
    partial class CirclePercentage : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Shapes_Shape_StrokeThickness(global::Windows.UI.Xaml.Shapes.Shape obj, global::System.Double value)
            {
                obj.StrokeThickness = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Width(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Height(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Height = value;
            }
            public static void Set_Windows_UI_Xaml_Media_PathFigure_StartPoint(global::Windows.UI.Xaml.Media.PathFigure obj, global::Windows.Foundation.Point value)
            {
                obj.StartPoint = value;
            }
            public static void Set_Windows_UI_Xaml_Media_ArcSegment_Size(global::Windows.UI.Xaml.Media.ArcSegment obj, global::Windows.Foundation.Size value)
            {
                obj.Size = value;
            }
            public static void Set_Windows_UI_Xaml_Media_ArcSegment_IsLargeArc(global::Windows.UI.Xaml.Media.ArcSegment obj, global::System.Boolean value)
            {
                obj.IsLargeArc = value;
            }
            public static void Set_Windows_UI_Xaml_Media_ArcSegment_Point(global::Windows.UI.Xaml.Media.ArcSegment obj, global::Windows.Foundation.Point value)
            {
                obj.Point = value;
            }
        };

        private class CirclePercentage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICirclePercentage_Bindings
        {
            private global::MyDriving.UWP.Controls.CirclePercentage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Shapes.Path obj2;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj3;
            private global::Windows.UI.Xaml.Media.PathFigure obj4;
            private global::Windows.UI.Xaml.Media.ArcSegment obj5;

            public CirclePercentage_obj1_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2:
                        this.obj2 = (global::Windows.UI.Xaml.Shapes.Path)target;
                        break;
                    case 3:
                        this.obj3 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 4:
                        this.obj4 = (global::Windows.UI.Xaml.Media.PathFigure)target;
                        break;
                    case 5:
                        this.obj5 = (global::Windows.UI.Xaml.Media.ArcSegment)target;
                        break;
                    default:
                        break;
                }
            }

            // ICirclePercentage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // CirclePercentage_obj1_Bindings

            public void SetDataRoot(global::MyDriving.UWP.Controls.CirclePercentage newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MyDriving.UWP.Controls.CirclePercentage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_StrokeThickness(obj.StrokeThickness, phase);
                        this.Update_TotalSize(obj.TotalSize, phase);
                        this.Update_StartPoint(obj.StartPoint, phase);
                        this.Update_Size(obj.Size, phase);
                        this.Update_IsLargeArc(obj.IsLargeArc, phase);
                        this.Update_EndPoint(obj.EndPoint, phase);
                    }
                }
            }
            private void Update_StrokeThickness(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_StrokeThickness(this.obj2, obj);
                }
            }
            private void Update_TotalSize(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj3, obj);
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Height(this.obj3, obj);
                }
            }
            private void Update_StartPoint(global::Windows.Foundation.Point obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_PathFigure_StartPoint(this.obj4, obj);
                }
            }
            private void Update_Size(global::Windows.Foundation.Size obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_ArcSegment_Size(this.obj5, obj);
                }
            }
            private void Update_IsLargeArc(global::System.Boolean obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_ArcSegment_IsLargeArc(this.obj5, obj);
                }
            }
            private void Update_EndPoint(global::Windows.Foundation.Point obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_ArcSegment_Point(this.obj5, obj);
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    this.Path = (global::Windows.UI.Xaml.Shapes.Path)(target);
                }
                break;
            case 5:
                {
                    this.Arc = (global::Windows.UI.Xaml.Media.ArcSegment)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    CirclePercentage_obj1_Bindings bindings = new CirclePercentage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

